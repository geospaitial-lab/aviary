name: Build and deploy docs

on:
  release:
    types:
      - published
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/docs.yaml'
      - 'dev/mkdocs.yaml'
      - 'docs/**/*'
  push:
    branches:
      - main
    paths:
      - '.github/workflows/docs.yaml'
      - 'dev/mkdocs.yaml'
      - 'docs/**/*'

permissions:
  contents: write

env:
  UV_SYSTEM_PYTHON: 1

jobs:
  build_docs:
    if: |
      github.event_name == 'pull_request' ||
      github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: '**/*requirements.txt'

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          uv pip install --upgrade pip setuptools wheel
          uv pip install -r requirements.txt -r dev/requirements/docs_requirements.txt

      - name: Build maps
        run: |
          python -m docs.scripts.build_maps

      - name: DEBUG
        run: |
          ls docs/how_to_guides/api/maps

      - name: Build docs
        run: |
          mkdocs build -f dev/mkdocs.yaml

  build_and_deploy_docs:
    if: |
      github.event_name == 'release'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configure Git credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: '**/*requirements.txt'

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          uv pip install --upgrade pip setuptools wheel
          uv pip install -r requirements.txt -r dev/requirements/docs_requirements.txt

      - name: Build maps
        run: |
          python -m docs.scripts.build_maps

      - name: DEBUG
        run: |
          ls docs/how_to_guides/api/maps

      - name: Build and deploy docs
        run: |
          mkdocs gh-deploy -f dev/mkdocs.yaml --force
